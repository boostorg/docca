#
# Copyright (c) 2019 Vinnie Falco (vinnie.falco@gmail.com)
# Copyright (c) 2021 Dmitry Arkhipov (grisumbras@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Official repository: https://github.com/cppalliance/json
#


import path ;
import project ;
import saxonhe ;


.here  = [ path.make [ modules.binding $(__name__) ] ] ;
.here = $(.here:D) ;


rule reference ( target : index overrides )
{
    local project = [ project.current ] ;

    # Copy the project-specific config XSLT
    copy-xsl $(overrides) $(project) custom-overrides.xsl ;

    # Copy all the XSLT modules to the target directory.
    # Also, specify their dependencies.
    local src-dir = $(.here)/include/docca ;
    copy-xsl $(src-dir)/common.xsl             $(project) ;
    copy-xsl $(src-dir)/base-config.xsl        $(project) ;
    copy-xsl $(src-dir)/emphasized-types.xsl   $(project) ;
    copy-xsl $(src-dir)/assemble-quickbook.xsl $(project) ;

    copy-xsl $(src-dir)/base-extract-xml-pages.xsl $(project) : common.xsl ;
    copy-xsl $(src-dir)/base-stage1.xsl            $(project) : common.xsl ;

    copy-xsl $(src-dir)/extract-xml-pages.xsl $(project)
        : base-extract-xml-pages.xsl
          base-config.xsl
          custom-overrides.xsl
        ;

    copy-xsl $(src-dir)/stage1.xsl $(project)
        : base-stage1.xsl
          base-config.xsl
          custom-overrides.xsl
        ;

    copy-xsl $(src-dir)/base-stage2.xsl $(project)
        : common.xsl
          emphasized-types.xsl
        ;

    copy-xsl $(src-dir)/stage2.xsl $(project)
        : base-stage2.xsl
          base-config.xsl
          custom-overrides.xsl
        ;

    #-------------------------------------------------------------------------------
    #
    # Run index.xml through the first transformation stage
    # (assembling and splitting the XML into page-specific files).
    #
    make-explicit xml-pages.xml $(project)
        : $(index)
          extract-xml-pages.xsl
        : @saxonhe.saxonhe
        ;

    # This is just to make the directory eligible as a source
    make-explicit xml-pages $(project) : xml-pages.xml : @docca.null_action ;

    make-explicit stage1/results $(project)
        : xml-pages
          stage1.xsl
        : @saxonhe.saxonhe_dir
        ;

    make-explicit stage2/results $(project)
        : stage1/results
          stage2.xsl
        : @saxonhe.saxonhe_dir
        ;

    make $(target)
        : xml-pages.xml
          assemble-quickbook.xsl

          # TODO: make this input to the XSLT somehow
          #       rather than relying on it being hard-coded
          #       in the XSLT (which it is!)
          stage2/results
        : @saxonhe.saxonhe
        ;
}


local rule copy-xsl ( source project target ? : dependencies * )
{
    target ?= $(source:D=) ;
    make-explicit $(target) $(project)
        : $(source)
        : @common.copy
        : <dependency>$(dependencies)
        ;
}


local rule make-explicit ( target project : sources * : make-rule + : reqs *
    : ureqs * )
{
    make $(target) : $(sources) : $(make-rule) : $(reqs) : $(ureqs) ;
    $(project).mark-target-as-explicit $(target) ;
}


actions null_action
{
    touch -c $(1) ;
}
